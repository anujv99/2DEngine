local MakeBlankGame = function() {
	
	local BlankGame = {
		Pos = Vec2(0),
		Radius = 0.0f,
		Segments = 32,
		Color = Vec4(1),
		ThreadId = -1,
		Box,
		Ps,
	};

	BlankGame.Init = function() {
		print("This is a blank game");
		.ThreadId = this:thread(.Update);
		.Box = Sprite();
		.Box.Color = Vec4(0.8f, 0.4f, 0.1f, 0.5f);
		.Box.Position = Vec2(0.0f);
		.Box.Dimension = Vec2(1.0f);

		.Ps = ParticleSystem(1024);
	};

	BlankGame.Update = function() {
		while (true) {
			RegisterDraw(.Draw, this);
			RegisterGui(.Gui, this);

			if (Input.IsKeyPressed(Input.KEY_ESCAPE)) {
				break;
			}

			.Ps.Update();

			yield();
		}
	};

	BlankGame.Gui = function() {
		Gui.Begin("Blank Game");

		Gui.Text("Blank Game GUI");
		Gui.Text("HELP");
		Gui.Text("[F1] Analytics");
		Gui.Text("[F2] Virtual Console");
		Gui.Text("[F3] Profiler");

		Gui.Separator();
		Gui.Text("Box Props");
		.Box.Position = Gui.DragVec2("Pos", .Box.Position, 0.01);
		.Box.Dimension = Gui.DragVec2("Dimen", .Box.Dimension, 0.01);
		.Box.Rotation = Gui.SliderFloat("Rot", .Box.Rotation, -180, 180);
		.Box.Color = Gui.ColorEdit4("Col", .Box.Color);

		Gui.Separator();

		if (Gui.Button("Save")) {
			SaveParticleSystemToFile(.Ps, "test.ps");
		}

		if (Gui.Button("Load")) {
			LoadParticleSystemFromFile(.Ps, "test.ps");
		}
		.Ps.Gui();
		
		Gui.End();
	};

	BlankGame.Draw = function() {
		.Ps.Draw();
		.Box.Draw();
	};

	return BlankGame;
};

global g_Game = MakeBlankGame();